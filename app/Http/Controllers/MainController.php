<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\UserData;
use Illuminate\Support\Facades\Hash;

class MainController extends Controller
{
    function index(){
        if(session()->has('LoggedUser')){
            $user = UserData::where('id','=',session('LoggedUser'))->first();
            $user->status = 403;
            $user->save();
            session()->pull('LoggedUser');
        }
        return view('index');
    }

    function login(){
        if(session()->has('LoggedUser')){
            $user = UserData::where('id','=',session('LoggedUser'))->first();
            $user->status = 403;
            $user->save();
            session()->pull('LoggedUser');
        }
        return view('index');
    }

    function register(){
        if(session()->has('LoggedUser')){
            $user = UserData::where('id','=',session('LoggedUser'))->first();
            $user->status = 403;
            $user->save();
            session()->pull('LoggedUser');
        }
        return view('register');
    }

    function save(Request $request){
        $request->validate([
           'name'=>'required|string|max:10',
           'password'=>'required|string|min:10|max:13',
        ]);

        if(UserData::where("name","=",$request["name"])->first()){
            return back()->with('fail', 'Username has already been taken.');
        }

        $user = new UserData();
        $user->name = $request->name;
        $user->password = Hash::make($request->password);
        $user->picture = "../profile-pictures/dirk.png";
        $user->role = "user";
        $user->status = 200;
        $user->challenge_1 = 0;
        $user->challenge_1_tries = 0;
        $user->challenge_2 = 0;
        $user->challenge_2_tries = 0;
        $user->challenge_3 = 0;
        $user->challenge_3_tries = 0;
        $user->challenge_4 = 0;
        $user->challenge_4_tries = 0;
        $user->challenge_5 = 0;
        $user->challenge_5_tries = 0;
        $user->score = 0;

        $save = $user->save();
        if ($save){
            return back()->with('success', 'New user has been made.');
        }
        else {
            return back()->with('fail', 'Something went wrong, try again later.');
        }
    }

    function check(Request $request){
        $request->validate([
            'name'=>'required|string|max:10',
            'password'=>'required|string|min:10',
        ]);

        $userInfo = UserData::where('name','=',$request->name)->first();

        //check if user exist
        if(!$userInfo){
            return back()->with('fail', 'We did not find a user with this name.');
        }
        //check disabled
        if($userInfo->status == 451){
            return back()->with('fail', 'This account has been disabled');
        }
        //check password
        if(Hash::check($request->password, $userInfo->password)){
            $userInfo->status = 200;
            $userInfo->save();
            $request->session()->put('LoggedUser', $userInfo->id);
            return redirect('dashboard');
        }
        return back()->with('fail', 'Incorrect password');
    }

    function dashboard(){
        $data = ['LoggedUserInfo'=>UserData::where('id','=',session('LoggedUser'))->first()];
        return view('dashboard', $data);
    }

    function logout(){
        if(session()->has('LoggedUser')){
            $user = UserData::where('id','=',session('LoggedUser'))->first();
            $user->status = 403;
            $user->save();
            session()->pull('LoggedUser');
            return redirect("login");
        }
        return back()->with('fail', 'User did not logged out.');
    }

    function reset(){
        $user = UserData::where('id','=',session('LoggedUser'))->first();
        $user->challenge_1 = 0;
        $user->challenge_1_tries = 0;
        $user->challenge_2 = 0;
        $user->challenge_2_tries = 0;
        $user->challenge_3 = 0;
        $user->challenge_3_tries = 0;
        $user->challenge_4 = 0;
        $user->challenge_4_tries = 0;
        $user->challenge_5 = 0;
        $user->challenge_5_tries = 0;
        $user->score = 0;
        $save = $user->save();
        if($save){
            return back()->with('success', 'Challenges got reset.');
        }
        return back()->with('fail', 'Challenges did not get reset.');
    }

    //TODO foto uploaden
    function upload(Request $request){
        $user = UserData::where('id','=',session('LoggedUser'))->first();
        $allowedFileTypes = ['image/jpeg','image/gif','image/png','image/jpg'];
        $contentType = $request->profilepicture->getClientMimeType();

        if(in_array($contentType, $allowedFileTypes)){
            $user->picture = $request->profilepicture;
            $user->save();
            return back()->with('success', 'Your profile picture has changed.');
        }
        return back()->with('fail', 'This is not an accepted filetype.');
    }


    //admin
    function admin(){
        $data = UserData::get(array('name', 'status', 'score'));
        return view('admin/admin', $data);
    }

    function disablePlayer(){
        $user = UserData::where('id','=',session('ClickedUser'))->first();
        $user->status = 451;
        $user->save();
        return back()->with('success', 'Player disabled.');
    }

    function enablePlayer(){
        $user = UserData::where('id','=',session('ClickedUser'))->first();
        $user->status = 403;
        $user->save();
        return back()->with('success', 'Player disabled.');
    }




    function challenges(){
        $data = ['LoggedUserInfo'=>UserData::where('id','=',session('LoggedUser'))->first()];
        return view('challenges/challenges', $data);
    }


    function challenge1(){
        $data = ['LoggedUserInfo'=>UserData::where('id','=',session('LoggedUser'))->first()];
        return view('challenges/challenge-1', $data);
    }

    function checkChallenge1(Request $request){
        $user = UserData::where('id','=',session('LoggedUser'))->first();
        $flag = "breach{1_am_a_t3a_p0t}";
        if($request->flag == $flag){
            $user->challenge_1 = 1;
            $user->challenge_1_tries = $user->challenge_1_tries+1;
            $user->score = $user->score+1;
            $user->save();
            return back()->with('success', 'You have completed this challenge!');
        }
        $user->challenge_1_tries = $user->challenge_1_tries+1;
        $user->save();
        return back()->with('fail', 'Nice try, but you have to look further.');
    }


    function challenge2(){
        $data = ['LoggedUserInfo'=>UserData::where('id','=',session('LoggedUser'))->first()];
        return view('challenges/challenge-2', $data);
    }

    function checkChallenge2(Request $request){
        $user = UserData::where('id','=',session('LoggedUser'))->first();
        $flag = "breach{Sm9obm55IFNpbHZlcmhhbmQu}";
        if($request->flag == $flag){
            $user->challenge_2 = 1;
            $user->challenge_2_tries = $user->challenge_2_tries+1;
            $user->score = $user->score+1;
            $user->save();
            return back()->with('success', 'You have completed this challenge!');
        }
        $user->challenge_2_tries = $user->challenge_2_tries+1;
        $user->save();
        return back()->with('fail', 'Nice try, but you have to look further.');
    }


    function challenge3(){
        $data = ['LoggedUserInfo'=>UserData::where('id','=',session('LoggedUser'))->first()];
        return view('challenges/challenge-3', $data);
    }

    function checkChallenge3part1(Request $request){
        $user = UserData::where('id','=',session('LoggedUser'))->first();
        $flag = "<frameset onload=javascript:alert(1)>";
        if($request->xss == $flag){
            return back()->with('success', 'You have found the flag! The flag is breach{d4mn_ur_XSS_sk1ll3d}');
        }
        $user->challenge_3_tries = $user->challenge_3_tries+1;
        $user->save();
        return back()->with('fail', 'Nice try, but you have to look further.');
    }

    function checkChallenge3part2(Request $request){
        $user = UserData::where('id','=',session('LoggedUser'))->first();
        $flag = "breach{d4mn_ur_XSS_sk1ll3d}";
        if($request->flag == $flag){
            $user->challenge_3 = 1;
            $user->challenge_3_tries = $user->challenge_3_tries+1;
            $user->score = $user->score+1;
            $user->save();
            return back()->with('success', 'You have completed this challenge!');
        }
        $user->challenge_3_tries = $user->challenge_3_tries+1;
        $user->save();
        return back()->with('fail', 'Nice try, but you have to look further.');
    }


    function challenge4(){
        $data = ['LoggedUserInfo'=>UserData::where('id','=',session('LoggedUser'))->first()];
        return view('challenges/challenge-4', $data);
    }

    function checkChallenge4part1(Request $request){
        $user = UserData::where('id','=',session('LoggedUser'))->first();
        $sqli = "' OR 1 = 1 -- -";
        if($request->sqli == $sqli){
            return back()->with('success', 'You have found the flag! The flag is breach{1_d4r3_U_t0_5QL1_dR0p_T4bL3_*}');
        }
        $user->challenge_4_tries = $user->challenge_4_tries+1;
        $user->save();
        return back()->with('fail', 'Nice try, but you have to look further.');
    }

    function checkChallenge4part2(Request $request){
        $user = UserData::where('id','=',session('LoggedUser'))->first();
        $flag = "breach{1_d4r3_U_t0_5QL1_dR0p_T4bL3_*}";
        if($request->flag == $flag){
            $user->challenge_4 = 1;
            $user->challenge_4_tries = $user->challenge_4_tries+1;
            $user->score = $user->score+1;
            $user->save();
            return back()->with('success', 'You have completed this challenge!');
        }
        $user->challenge_4_tries = $user->challenge_4_tries+1;
        $user->save();
        return back()->with('fail', 'Nice try, but you have to look further.');
    }


    function challenge5(){
        $data = ['LoggedUserInfo'=>UserData::where('id','=',session('LoggedUser'))->first()];
        return view('challenges/challenge-5', $data);
    }

    function checkChallenge5(Request $request){
        $user = UserData::where('id','=',session('LoggedUser'))->first();
        $flag = "breach{Y0u_H4v3_SoM3_Pat1eNc3}";
        if($request->flag == $flag){
            $user->challenge_5 = 1;
            $user->challenge_5_tries = $user->challenge_5_tries+1;
            $user->score = $user->score+1;
            $user->save();
            return back()->with('success', 'You have completed this challenge!');
        }
        $user->challenge_5_tries = $user->challenge_5_tries+1;
        $user->save();
        return back()->with('fail', 'Nice try, but you have to look further.');
    }


    function challenge6(){
        $data = ['LoggedUserInfo'=>UserData::where('id','=',session('LoggedUser'))->first()];
        return view('challenges/challenge-6', $data);
    }
}
